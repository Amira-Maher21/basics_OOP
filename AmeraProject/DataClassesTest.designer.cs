#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AmeraProject
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Test2")]
	public partial class DataClassesTestDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertClass(Class instance);
    partial void UpdateClass(Class instance);
    partial void DeleteClass(Class instance);
    partial void InsertClassesFlag(ClassesFlag instance);
    partial void UpdateClassesFlag(ClassesFlag instance);
    partial void DeleteClassesFlag(ClassesFlag instance);
    partial void InsertDocType(DocType instance);
    partial void UpdateDocType(DocType instance);
    partial void DeleteDocType(DocType instance);
    partial void InsertItemStore(ItemStore instance);
    partial void UpdateItemStore(ItemStore instance);
    partial void DeleteItemStore(ItemStore instance);
    partial void InsertJob(Job instance);
    partial void UpdateJob(Job instance);
    partial void DeleteJob(Job instance);
    partial void InsertStore(Store instance);
    partial void UpdateStore(Store instance);
    partial void DeleteStore(Store instance);
    partial void InsertStudent(Student instance);
    partial void UpdateStudent(Student instance);
    partial void DeleteStudent(Student instance);
    partial void InsertStudentSubject(StudentSubject instance);
    partial void UpdateStudentSubject(StudentSubject instance);
    partial void DeleteStudentSubject(StudentSubject instance);
    partial void InsertSubjct(Subjct instance);
    partial void UpdateSubjct(Subjct instance);
    partial void DeleteSubjct(Subjct instance);
    partial void InsertTeacherStudentClassess(TeacherStudentClassess instance);
    partial void UpdateTeacherStudentClassess(TeacherStudentClassess instance);
    partial void DeleteTeacherStudentClassess(TeacherStudentClassess instance);
    partial void InsertTeatacher(Teatacher instance);
    partial void UpdateTeatacher(Teatacher instance);
    partial void DeleteTeatacher(Teatacher instance);
    partial void Insertitem(item instance);
    partial void Updateitem(item instance);
    partial void Deleteitem(item instance);
    partial void InsertInvoiceMaster(InvoiceMaster instance);
    partial void UpdateInvoiceMaster(InvoiceMaster instance);
    partial void DeleteInvoiceMaster(InvoiceMaster instance);
    partial void InsertInvoiceMasterDetail(InvoiceMasterDetail instance);
    partial void UpdateInvoiceMasterDetail(InvoiceMasterDetail instance);
    partial void DeleteInvoiceMasterDetail(InvoiceMasterDetail instance);
    #endregion
		
		public DataClassesTestDataContext() : 
				base(global::AmeraProject.Properties.Settings.Default.Test2ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesTestDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesTestDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesTestDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesTestDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Class> Classes
		{
			get
			{
				return this.GetTable<Class>();
			}
		}
		
		public System.Data.Linq.Table<ClassesFlag> ClassesFlags
		{
			get
			{
				return this.GetTable<ClassesFlag>();
			}
		}
		
		public System.Data.Linq.Table<DocType> DocTypes
		{
			get
			{
				return this.GetTable<DocType>();
			}
		}
		
		public System.Data.Linq.Table<ItemStore> ItemStores
		{
			get
			{
				return this.GetTable<ItemStore>();
			}
		}
		
		public System.Data.Linq.Table<Job> Jobs
		{
			get
			{
				return this.GetTable<Job>();
			}
		}
		
		public System.Data.Linq.Table<Store> Stores
		{
			get
			{
				return this.GetTable<Store>();
			}
		}
		
		public System.Data.Linq.Table<Student> Students
		{
			get
			{
				return this.GetTable<Student>();
			}
		}
		
		public System.Data.Linq.Table<StudentSubject> StudentSubjects
		{
			get
			{
				return this.GetTable<StudentSubject>();
			}
		}
		
		public System.Data.Linq.Table<Subjct> Subjcts
		{
			get
			{
				return this.GetTable<Subjct>();
			}
		}
		
		public System.Data.Linq.Table<TeacherStudentClassess> TeacherStudentClassesses
		{
			get
			{
				return this.GetTable<TeacherStudentClassess>();
			}
		}
		
		public System.Data.Linq.Table<Teatacher> Teatachers
		{
			get
			{
				return this.GetTable<Teatacher>();
			}
		}
		
		public System.Data.Linq.Table<item> items
		{
			get
			{
				return this.GetTable<item>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceMaster> InvoiceMasters
		{
			get
			{
				return this.GetTable<InvoiceMaster>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceMasterDetail> InvoiceMasterDetails
		{
			get
			{
				return this.GetTable<InvoiceMasterDetail>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertIntoClacces")]
		public ISingleResult<InsertIntoClaccesResult> InsertIntoClacces([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClassDesc", DbType="NVarChar(MAX)")] string classDesc, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClassIsActive", DbType="Bit")] System.Nullable<bool> classIsActive)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), classDesc, classIsActive);
			return ((ISingleResult<InsertIntoClaccesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateClasses")]
		public int UpdateClasses([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClassId", DbType="BigInt")] System.Nullable<long> classId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClassDesc", DbType="NVarChar(MAX)")] string classDesc, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClassIsActive", DbType="Bit")] System.Nullable<bool> classIsActive)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), classId, classDesc, classIsActive);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertStudentSubject")]
		public ISingleResult<InsertStudentSubjectResult> InsertStudentSubject([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StudentId", DbType="BigInt")] System.Nullable<long> studentId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SubjectId", DbType="BigInt")] System.Nullable<long> subjectId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), studentId, subjectId);
			return ((ISingleResult<InsertStudentSubjectResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertInDetail")]
		public ISingleResult<InsertInDetailResult> InsertInDetail([global::System.Data.Linq.Mapping.ParameterAttribute(Name="InvoiceId", DbType="Int")] System.Nullable<int> invoiceId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemPrice", DbType="Decimal(18,2)")] System.Nullable<decimal> itemPrice, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemId", DbType="Int")] System.Nullable<int> itemId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Quantity", DbType="Decimal(18,2)")] System.Nullable<decimal> quantity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Total", DbType="Decimal(18,2)")] System.Nullable<decimal> total)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), invoiceId, itemPrice, itemId, quantity, total);
			return ((ISingleResult<InsertInDetailResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Classes")]
	public partial class Class : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ClassId;
		
		private string _ClassDesc;
		
		private System.Nullable<bool> _ClassIsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClassIdChanging(long value);
    partial void OnClassIdChanged();
    partial void OnClassDescChanging(string value);
    partial void OnClassDescChanged();
    partial void OnClassIsActiveChanging(System.Nullable<bool> value);
    partial void OnClassIsActiveChanged();
    #endregion
		
		public Class()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassDesc", DbType="NVarChar(MAX)")]
		public string ClassDesc
		{
			get
			{
				return this._ClassDesc;
			}
			set
			{
				if ((this._ClassDesc != value))
				{
					this.OnClassDescChanging(value);
					this.SendPropertyChanging();
					this._ClassDesc = value;
					this.SendPropertyChanged("ClassDesc");
					this.OnClassDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassIsActive", DbType="Bit")]
		public System.Nullable<bool> ClassIsActive
		{
			get
			{
				return this._ClassIsActive;
			}
			set
			{
				if ((this._ClassIsActive != value))
				{
					this.OnClassIsActiveChanging(value);
					this.SendPropertyChanging();
					this._ClassIsActive = value;
					this.SendPropertyChanged("ClassIsActive");
					this.OnClassIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClassesFlag")]
	public partial class ClassesFlag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ClassesFlagId;
		
		private string _ClassesFlagDesc;
		
		private System.Nullable<bool> _ClassesFlagIsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClassesFlagIdChanging(long value);
    partial void OnClassesFlagIdChanged();
    partial void OnClassesFlagDescChanging(string value);
    partial void OnClassesFlagDescChanged();
    partial void OnClassesFlagIsActiveChanging(System.Nullable<bool> value);
    partial void OnClassesFlagIsActiveChanged();
    #endregion
		
		public ClassesFlag()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassesFlagId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ClassesFlagId
		{
			get
			{
				return this._ClassesFlagId;
			}
			set
			{
				if ((this._ClassesFlagId != value))
				{
					this.OnClassesFlagIdChanging(value);
					this.SendPropertyChanging();
					this._ClassesFlagId = value;
					this.SendPropertyChanged("ClassesFlagId");
					this.OnClassesFlagIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassesFlagDesc", DbType="NVarChar(MAX)")]
		public string ClassesFlagDesc
		{
			get
			{
				return this._ClassesFlagDesc;
			}
			set
			{
				if ((this._ClassesFlagDesc != value))
				{
					this.OnClassesFlagDescChanging(value);
					this.SendPropertyChanging();
					this._ClassesFlagDesc = value;
					this.SendPropertyChanged("ClassesFlagDesc");
					this.OnClassesFlagDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassesFlagIsActive", DbType="Bit")]
		public System.Nullable<bool> ClassesFlagIsActive
		{
			get
			{
				return this._ClassesFlagIsActive;
			}
			set
			{
				if ((this._ClassesFlagIsActive != value))
				{
					this.OnClassesFlagIsActiveChanging(value);
					this.SendPropertyChanging();
					this._ClassesFlagIsActive = value;
					this.SendPropertyChanged("ClassesFlagIsActive");
					this.OnClassesFlagIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DocType")]
	public partial class DocType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DocTypeId;
		
		private string _DocTypeName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDocTypeIdChanging(int value);
    partial void OnDocTypeIdChanged();
    partial void OnDocTypeNameChanging(string value);
    partial void OnDocTypeNameChanged();
    #endregion
		
		public DocType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocTypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DocTypeId
		{
			get
			{
				return this._DocTypeId;
			}
			set
			{
				if ((this._DocTypeId != value))
				{
					this.OnDocTypeIdChanging(value);
					this.SendPropertyChanging();
					this._DocTypeId = value;
					this.SendPropertyChanged("DocTypeId");
					this.OnDocTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocTypeName", DbType="NVarChar(50)")]
		public string DocTypeName
		{
			get
			{
				return this._DocTypeName;
			}
			set
			{
				if ((this._DocTypeName != value))
				{
					this.OnDocTypeNameChanging(value);
					this.SendPropertyChanging();
					this._DocTypeName = value;
					this.SendPropertyChanged("DocTypeName");
					this.OnDocTypeNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ItemStore")]
	public partial class ItemStore : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ItemsStoreId;
		
		private System.Nullable<int> _ItemsId;
		
		private System.Nullable<decimal> _ItemQuantityOnHand;
		
		private System.Nullable<decimal> _ItemSellPrice;
		
		private System.Nullable<decimal> _ItemBuyPrice;
		
		private System.Nullable<int> _StoreId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemsStoreIdChanging(int value);
    partial void OnItemsStoreIdChanged();
    partial void OnItemsIdChanging(System.Nullable<int> value);
    partial void OnItemsIdChanged();
    partial void OnItemQuantityOnHandChanging(System.Nullable<decimal> value);
    partial void OnItemQuantityOnHandChanged();
    partial void OnItemSellPriceChanging(System.Nullable<decimal> value);
    partial void OnItemSellPriceChanged();
    partial void OnItemBuyPriceChanging(System.Nullable<decimal> value);
    partial void OnItemBuyPriceChanged();
    partial void OnStoreIdChanging(System.Nullable<int> value);
    partial void OnStoreIdChanged();
    #endregion
		
		public ItemStore()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemsStoreId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ItemsStoreId
		{
			get
			{
				return this._ItemsStoreId;
			}
			set
			{
				if ((this._ItemsStoreId != value))
				{
					this.OnItemsStoreIdChanging(value);
					this.SendPropertyChanging();
					this._ItemsStoreId = value;
					this.SendPropertyChanged("ItemsStoreId");
					this.OnItemsStoreIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemsId", DbType="Int")]
		public System.Nullable<int> ItemsId
		{
			get
			{
				return this._ItemsId;
			}
			set
			{
				if ((this._ItemsId != value))
				{
					this.OnItemsIdChanging(value);
					this.SendPropertyChanging();
					this._ItemsId = value;
					this.SendPropertyChanged("ItemsId");
					this.OnItemsIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemQuantityOnHand", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> ItemQuantityOnHand
		{
			get
			{
				return this._ItemQuantityOnHand;
			}
			set
			{
				if ((this._ItemQuantityOnHand != value))
				{
					this.OnItemQuantityOnHandChanging(value);
					this.SendPropertyChanging();
					this._ItemQuantityOnHand = value;
					this.SendPropertyChanged("ItemQuantityOnHand");
					this.OnItemQuantityOnHandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemSellPrice", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> ItemSellPrice
		{
			get
			{
				return this._ItemSellPrice;
			}
			set
			{
				if ((this._ItemSellPrice != value))
				{
					this.OnItemSellPriceChanging(value);
					this.SendPropertyChanging();
					this._ItemSellPrice = value;
					this.SendPropertyChanged("ItemSellPrice");
					this.OnItemSellPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemBuyPrice", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> ItemBuyPrice
		{
			get
			{
				return this._ItemBuyPrice;
			}
			set
			{
				if ((this._ItemBuyPrice != value))
				{
					this.OnItemBuyPriceChanging(value);
					this.SendPropertyChanging();
					this._ItemBuyPrice = value;
					this.SendPropertyChanged("ItemBuyPrice");
					this.OnItemBuyPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreId", DbType="Int")]
		public System.Nullable<int> StoreId
		{
			get
			{
				return this._StoreId;
			}
			set
			{
				if ((this._StoreId != value))
				{
					this.OnStoreIdChanging(value);
					this.SendPropertyChanging();
					this._StoreId = value;
					this.SendPropertyChanged("StoreId");
					this.OnStoreIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Job")]
	public partial class Job : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _JobId;
		
		private string _JobDese;
		
		private System.Nullable<bool> _JobIsactive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJobIdChanging(long value);
    partial void OnJobIdChanged();
    partial void OnJobDeseChanging(string value);
    partial void OnJobDeseChanged();
    partial void OnJobIsactiveChanging(System.Nullable<bool> value);
    partial void OnJobIsactiveChanged();
    #endregion
		
		public Job()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long JobId
		{
			get
			{
				return this._JobId;
			}
			set
			{
				if ((this._JobId != value))
				{
					this.OnJobIdChanging(value);
					this.SendPropertyChanging();
					this._JobId = value;
					this.SendPropertyChanged("JobId");
					this.OnJobIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobDese", DbType="NVarChar(MAX)")]
		public string JobDese
		{
			get
			{
				return this._JobDese;
			}
			set
			{
				if ((this._JobDese != value))
				{
					this.OnJobDeseChanging(value);
					this.SendPropertyChanging();
					this._JobDese = value;
					this.SendPropertyChanged("JobDese");
					this.OnJobDeseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobIsactive", DbType="Bit")]
		public System.Nullable<bool> JobIsactive
		{
			get
			{
				return this._JobIsactive;
			}
			set
			{
				if ((this._JobIsactive != value))
				{
					this.OnJobIsactiveChanging(value);
					this.SendPropertyChanging();
					this._JobIsactive = value;
					this.SendPropertyChanged("JobIsactive");
					this.OnJobIsactiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Store")]
	public partial class Store : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StoreId;
		
		private string _Storename;
		
		private System.Nullable<bool> _StoreAcative;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStoreIdChanging(int value);
    partial void OnStoreIdChanged();
    partial void OnStorenameChanging(string value);
    partial void OnStorenameChanged();
    partial void OnStoreAcativeChanging(System.Nullable<bool> value);
    partial void OnStoreAcativeChanged();
    #endregion
		
		public Store()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StoreId
		{
			get
			{
				return this._StoreId;
			}
			set
			{
				if ((this._StoreId != value))
				{
					this.OnStoreIdChanging(value);
					this.SendPropertyChanging();
					this._StoreId = value;
					this.SendPropertyChanged("StoreId");
					this.OnStoreIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Storename", DbType="NVarChar(50)")]
		public string Storename
		{
			get
			{
				return this._Storename;
			}
			set
			{
				if ((this._Storename != value))
				{
					this.OnStorenameChanging(value);
					this.SendPropertyChanging();
					this._Storename = value;
					this.SendPropertyChanged("Storename");
					this.OnStorenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreAcative", DbType="Bit")]
		public System.Nullable<bool> StoreAcative
		{
			get
			{
				return this._StoreAcative;
			}
			set
			{
				if ((this._StoreAcative != value))
				{
					this.OnStoreAcativeChanging(value);
					this.SendPropertyChanging();
					this._StoreAcative = value;
					this.SendPropertyChanged("StoreAcative");
					this.OnStoreAcativeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Student")]
	public partial class Student : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _StudentId;
		
		private string _StudentName;
		
		private string _StudentAddress;
		
		private string _StudentIdeinty;
		
		private System.Nullable<bool> _StudentIsAcive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudentIdChanging(long value);
    partial void OnStudentIdChanged();
    partial void OnStudentNameChanging(string value);
    partial void OnStudentNameChanged();
    partial void OnStudentAddressChanging(string value);
    partial void OnStudentAddressChanged();
    partial void OnStudentIdeintyChanging(string value);
    partial void OnStudentIdeintyChanged();
    partial void OnStudentIsAciveChanging(System.Nullable<bool> value);
    partial void OnStudentIsAciveChanged();
    #endregion
		
		public Student()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long StudentId
		{
			get
			{
				return this._StudentId;
			}
			set
			{
				if ((this._StudentId != value))
				{
					this.OnStudentIdChanging(value);
					this.SendPropertyChanging();
					this._StudentId = value;
					this.SendPropertyChanged("StudentId");
					this.OnStudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentName", DbType="NVarChar(MAX)")]
		public string StudentName
		{
			get
			{
				return this._StudentName;
			}
			set
			{
				if ((this._StudentName != value))
				{
					this.OnStudentNameChanging(value);
					this.SendPropertyChanging();
					this._StudentName = value;
					this.SendPropertyChanged("StudentName");
					this.OnStudentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentAddress", DbType="NVarChar(MAX)")]
		public string StudentAddress
		{
			get
			{
				return this._StudentAddress;
			}
			set
			{
				if ((this._StudentAddress != value))
				{
					this.OnStudentAddressChanging(value);
					this.SendPropertyChanging();
					this._StudentAddress = value;
					this.SendPropertyChanged("StudentAddress");
					this.OnStudentAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentIdeinty", DbType="NVarChar(MAX)")]
		public string StudentIdeinty
		{
			get
			{
				return this._StudentIdeinty;
			}
			set
			{
				if ((this._StudentIdeinty != value))
				{
					this.OnStudentIdeintyChanging(value);
					this.SendPropertyChanging();
					this._StudentIdeinty = value;
					this.SendPropertyChanged("StudentIdeinty");
					this.OnStudentIdeintyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentIsAcive", DbType="Bit")]
		public System.Nullable<bool> StudentIsAcive
		{
			get
			{
				return this._StudentIsAcive;
			}
			set
			{
				if ((this._StudentIsAcive != value))
				{
					this.OnStudentIsAciveChanging(value);
					this.SendPropertyChanging();
					this._StudentIsAcive = value;
					this.SendPropertyChanged("StudentIsAcive");
					this.OnStudentIsAciveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentSubject")]
	public partial class StudentSubject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _StudentSubjectId;
		
		private System.Nullable<long> _StudentId;
		
		private System.Nullable<long> _SubjectId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudentSubjectIdChanging(long value);
    partial void OnStudentSubjectIdChanged();
    partial void OnStudentIdChanging(System.Nullable<long> value);
    partial void OnStudentIdChanged();
    partial void OnSubjectIdChanging(System.Nullable<long> value);
    partial void OnSubjectIdChanged();
    #endregion
		
		public StudentSubject()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentSubjectId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long StudentSubjectId
		{
			get
			{
				return this._StudentSubjectId;
			}
			set
			{
				if ((this._StudentSubjectId != value))
				{
					this.OnStudentSubjectIdChanging(value);
					this.SendPropertyChanging();
					this._StudentSubjectId = value;
					this.SendPropertyChanged("StudentSubjectId");
					this.OnStudentSubjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", DbType="BigInt")]
		public System.Nullable<long> StudentId
		{
			get
			{
				return this._StudentId;
			}
			set
			{
				if ((this._StudentId != value))
				{
					this.OnStudentIdChanging(value);
					this.SendPropertyChanging();
					this._StudentId = value;
					this.SendPropertyChanged("StudentId");
					this.OnStudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectId", DbType="BigInt")]
		public System.Nullable<long> SubjectId
		{
			get
			{
				return this._SubjectId;
			}
			set
			{
				if ((this._SubjectId != value))
				{
					this.OnSubjectIdChanging(value);
					this.SendPropertyChanging();
					this._SubjectId = value;
					this.SendPropertyChanged("SubjectId");
					this.OnSubjectIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Subjct")]
	public partial class Subjct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _SubjectId;
		
		private string _SubjectDesc;
		
		private System.Nullable<bool> _SubjectIsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSubjectIdChanging(long value);
    partial void OnSubjectIdChanged();
    partial void OnSubjectDescChanging(string value);
    partial void OnSubjectDescChanged();
    partial void OnSubjectIsActiveChanging(System.Nullable<bool> value);
    partial void OnSubjectIsActiveChanged();
    #endregion
		
		public Subjct()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long SubjectId
		{
			get
			{
				return this._SubjectId;
			}
			set
			{
				if ((this._SubjectId != value))
				{
					this.OnSubjectIdChanging(value);
					this.SendPropertyChanging();
					this._SubjectId = value;
					this.SendPropertyChanged("SubjectId");
					this.OnSubjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectDesc", DbType="NVarChar(MAX)")]
		public string SubjectDesc
		{
			get
			{
				return this._SubjectDesc;
			}
			set
			{
				if ((this._SubjectDesc != value))
				{
					this.OnSubjectDescChanging(value);
					this.SendPropertyChanging();
					this._SubjectDesc = value;
					this.SendPropertyChanged("SubjectDesc");
					this.OnSubjectDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectIsActive", DbType="Bit")]
		public System.Nullable<bool> SubjectIsActive
		{
			get
			{
				return this._SubjectIsActive;
			}
			set
			{
				if ((this._SubjectIsActive != value))
				{
					this.OnSubjectIsActiveChanging(value);
					this.SendPropertyChanging();
					this._SubjectIsActive = value;
					this.SendPropertyChanged("SubjectIsActive");
					this.OnSubjectIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TeacherStudentClassess")]
	public partial class TeacherStudentClassess : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _TeacherStudentClassessId;
		
		private System.Nullable<long> _TeatacherId;
		
		private System.Nullable<long> _ClassId;
		
		private System.Nullable<long> _StudentId;
		
		private System.Nullable<long> _ClassesFlagId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTeacherStudentClassessIdChanging(long value);
    partial void OnTeacherStudentClassessIdChanged();
    partial void OnTeatacherIdChanging(System.Nullable<long> value);
    partial void OnTeatacherIdChanged();
    partial void OnClassIdChanging(System.Nullable<long> value);
    partial void OnClassIdChanged();
    partial void OnStudentIdChanging(System.Nullable<long> value);
    partial void OnStudentIdChanged();
    partial void OnClassesFlagIdChanging(System.Nullable<long> value);
    partial void OnClassesFlagIdChanged();
    #endregion
		
		public TeacherStudentClassess()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherStudentClassessId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long TeacherStudentClassessId
		{
			get
			{
				return this._TeacherStudentClassessId;
			}
			set
			{
				if ((this._TeacherStudentClassessId != value))
				{
					this.OnTeacherStudentClassessIdChanging(value);
					this.SendPropertyChanging();
					this._TeacherStudentClassessId = value;
					this.SendPropertyChanged("TeacherStudentClassessId");
					this.OnTeacherStudentClassessIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeatacherId", DbType="BigInt")]
		public System.Nullable<long> TeatacherId
		{
			get
			{
				return this._TeatacherId;
			}
			set
			{
				if ((this._TeatacherId != value))
				{
					this.OnTeatacherIdChanging(value);
					this.SendPropertyChanging();
					this._TeatacherId = value;
					this.SendPropertyChanged("TeatacherId");
					this.OnTeatacherIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassId", DbType="BigInt")]
		public System.Nullable<long> ClassId
		{
			get
			{
				return this._ClassId;
			}
			set
			{
				if ((this._ClassId != value))
				{
					this.OnClassIdChanging(value);
					this.SendPropertyChanging();
					this._ClassId = value;
					this.SendPropertyChanged("ClassId");
					this.OnClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", DbType="BigInt")]
		public System.Nullable<long> StudentId
		{
			get
			{
				return this._StudentId;
			}
			set
			{
				if ((this._StudentId != value))
				{
					this.OnStudentIdChanging(value);
					this.SendPropertyChanging();
					this._StudentId = value;
					this.SendPropertyChanged("StudentId");
					this.OnStudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassesFlagId", DbType="BigInt")]
		public System.Nullable<long> ClassesFlagId
		{
			get
			{
				return this._ClassesFlagId;
			}
			set
			{
				if ((this._ClassesFlagId != value))
				{
					this.OnClassesFlagIdChanging(value);
					this.SendPropertyChanging();
					this._ClassesFlagId = value;
					this.SendPropertyChanged("ClassesFlagId");
					this.OnClassesFlagIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Teatacher")]
	public partial class Teatacher : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _TeatacherId;
		
		private string _TeatacherMame;
		
		private System.Nullable<System.DateTime> _TeacherBirthdate;
		
		private System.Nullable<long> _SubjectId;
		
		private System.Nullable<decimal> _TeacherSalary;
		
		private string _Teacherphone;
		
		private System.Nullable<bool> _TeacherIsActive;
		
		private System.Nullable<long> _JobId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTeatacherIdChanging(long value);
    partial void OnTeatacherIdChanged();
    partial void OnTeatacherMameChanging(string value);
    partial void OnTeatacherMameChanged();
    partial void OnTeacherBirthdateChanging(System.Nullable<System.DateTime> value);
    partial void OnTeacherBirthdateChanged();
    partial void OnSubjectIdChanging(System.Nullable<long> value);
    partial void OnSubjectIdChanged();
    partial void OnTeacherSalaryChanging(System.Nullable<decimal> value);
    partial void OnTeacherSalaryChanged();
    partial void OnTeacherphoneChanging(string value);
    partial void OnTeacherphoneChanged();
    partial void OnTeacherIsActiveChanging(System.Nullable<bool> value);
    partial void OnTeacherIsActiveChanged();
    partial void OnJobIdChanging(System.Nullable<long> value);
    partial void OnJobIdChanged();
    #endregion
		
		public Teatacher()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeatacherId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long TeatacherId
		{
			get
			{
				return this._TeatacherId;
			}
			set
			{
				if ((this._TeatacherId != value))
				{
					this.OnTeatacherIdChanging(value);
					this.SendPropertyChanging();
					this._TeatacherId = value;
					this.SendPropertyChanged("TeatacherId");
					this.OnTeatacherIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeatacherMame", DbType="NVarChar(MAX)")]
		public string TeatacherMame
		{
			get
			{
				return this._TeatacherMame;
			}
			set
			{
				if ((this._TeatacherMame != value))
				{
					this.OnTeatacherMameChanging(value);
					this.SendPropertyChanging();
					this._TeatacherMame = value;
					this.SendPropertyChanged("TeatacherMame");
					this.OnTeatacherMameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherBirthdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TeacherBirthdate
		{
			get
			{
				return this._TeacherBirthdate;
			}
			set
			{
				if ((this._TeacherBirthdate != value))
				{
					this.OnTeacherBirthdateChanging(value);
					this.SendPropertyChanging();
					this._TeacherBirthdate = value;
					this.SendPropertyChanged("TeacherBirthdate");
					this.OnTeacherBirthdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectId", DbType="BigInt")]
		public System.Nullable<long> SubjectId
		{
			get
			{
				return this._SubjectId;
			}
			set
			{
				if ((this._SubjectId != value))
				{
					this.OnSubjectIdChanging(value);
					this.SendPropertyChanging();
					this._SubjectId = value;
					this.SendPropertyChanged("SubjectId");
					this.OnSubjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherSalary", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> TeacherSalary
		{
			get
			{
				return this._TeacherSalary;
			}
			set
			{
				if ((this._TeacherSalary != value))
				{
					this.OnTeacherSalaryChanging(value);
					this.SendPropertyChanging();
					this._TeacherSalary = value;
					this.SendPropertyChanged("TeacherSalary");
					this.OnTeacherSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Teacherphone", DbType="NVarChar(MAX)")]
		public string Teacherphone
		{
			get
			{
				return this._Teacherphone;
			}
			set
			{
				if ((this._Teacherphone != value))
				{
					this.OnTeacherphoneChanging(value);
					this.SendPropertyChanging();
					this._Teacherphone = value;
					this.SendPropertyChanged("Teacherphone");
					this.OnTeacherphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherIsActive", DbType="Bit")]
		public System.Nullable<bool> TeacherIsActive
		{
			get
			{
				return this._TeacherIsActive;
			}
			set
			{
				if ((this._TeacherIsActive != value))
				{
					this.OnTeacherIsActiveChanging(value);
					this.SendPropertyChanging();
					this._TeacherIsActive = value;
					this.SendPropertyChanged("TeacherIsActive");
					this.OnTeacherIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobId", DbType="BigInt")]
		public System.Nullable<long> JobId
		{
			get
			{
				return this._JobId;
			}
			set
			{
				if ((this._JobId != value))
				{
					this.OnJobIdChanging(value);
					this.SendPropertyChanging();
					this._JobId = value;
					this.SendPropertyChanged("JobId");
					this.OnJobIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.items")]
	public partial class item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _itemId;
		
		private string _itemdesc;
		
		private System.Nullable<decimal> _itemsllprice;
		
		private System.Nullable<decimal> _itembuypirice;
		
		private System.Nullable<bool> _itemactive;
		
		private string _Barcode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnitemIdChanging(int value);
    partial void OnitemIdChanged();
    partial void OnitemdescChanging(string value);
    partial void OnitemdescChanged();
    partial void OnitemsllpriceChanging(System.Nullable<decimal> value);
    partial void OnitemsllpriceChanged();
    partial void OnitembuypiriceChanging(System.Nullable<decimal> value);
    partial void OnitembuypiriceChanged();
    partial void OnitemactiveChanging(System.Nullable<bool> value);
    partial void OnitemactiveChanged();
    partial void OnBarcodeChanging(string value);
    partial void OnBarcodeChanged();
    #endregion
		
		public item()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int itemId
		{
			get
			{
				return this._itemId;
			}
			set
			{
				if ((this._itemId != value))
				{
					this.OnitemIdChanging(value);
					this.SendPropertyChanging();
					this._itemId = value;
					this.SendPropertyChanged("itemId");
					this.OnitemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemdesc", DbType="NVarChar(MAX)")]
		public string itemdesc
		{
			get
			{
				return this._itemdesc;
			}
			set
			{
				if ((this._itemdesc != value))
				{
					this.OnitemdescChanging(value);
					this.SendPropertyChanging();
					this._itemdesc = value;
					this.SendPropertyChanged("itemdesc");
					this.OnitemdescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemsllprice", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> itemsllprice
		{
			get
			{
				return this._itemsllprice;
			}
			set
			{
				if ((this._itemsllprice != value))
				{
					this.OnitemsllpriceChanging(value);
					this.SendPropertyChanging();
					this._itemsllprice = value;
					this.SendPropertyChanged("itemsllprice");
					this.OnitemsllpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itembuypirice", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> itembuypirice
		{
			get
			{
				return this._itembuypirice;
			}
			set
			{
				if ((this._itembuypirice != value))
				{
					this.OnitembuypiriceChanging(value);
					this.SendPropertyChanging();
					this._itembuypirice = value;
					this.SendPropertyChanged("itembuypirice");
					this.OnitembuypiriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemactive", DbType="Bit")]
		public System.Nullable<bool> itemactive
		{
			get
			{
				return this._itemactive;
			}
			set
			{
				if ((this._itemactive != value))
				{
					this.OnitemactiveChanging(value);
					this.SendPropertyChanging();
					this._itemactive = value;
					this.SendPropertyChanged("itemactive");
					this.OnitemactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Barcode", DbType="NVarChar(MAX)")]
		public string Barcode
		{
			get
			{
				return this._Barcode;
			}
			set
			{
				if ((this._Barcode != value))
				{
					this.OnBarcodeChanging(value);
					this.SendPropertyChanging();
					this._Barcode = value;
					this.SendPropertyChanged("Barcode");
					this.OnBarcodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceMaster")]
	public partial class InvoiceMaster : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InvoiceId;
		
		private System.Nullable<System.DateTime> _InvoiceDate;
		
		private int _tetchrId;
		
		private System.Nullable<int> _NumberOfInstallMents;
		
		private System.Nullable<int> _StoreId;
		
		private System.Nullable<decimal> _InvoiceNetValue;
		
		private System.Nullable<decimal> _InvoiceNetValueAfterDiscount;
		
		private System.Nullable<decimal> _InvoiceDiscount;
		
		private System.Nullable<decimal> _SubmittedValue;
		
		private System.Nullable<int> _tregary_ID;
		
		private System.Nullable<int> _EmployeeId;
		
		private System.Nullable<decimal> _MainDiscount;
		
		private System.Nullable<int> _SeasoneId;
		
		private System.Nullable<int> _DocTypeId;
		
		private System.Nullable<int> _StudentId;
		
		private System.Nullable<int> _ClassesFlagId;
		
		private System.Nullable<int> _TeatacherId;
		
		private System.Nullable<decimal> _LastFinalTotalDiscount;
		
		private System.Nullable<decimal> _FinalInvoiceWinValue;
		
		private System.Nullable<decimal> _InvoiceWinValue;
		
		private System.Nullable<decimal> _InvoiceNetValue2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoiceIdChanging(int value);
    partial void OnInvoiceIdChanged();
    partial void OnInvoiceDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInvoiceDateChanged();
    partial void OntetchrIdChanging(int value);
    partial void OntetchrIdChanged();
    partial void OnNumberOfInstallMentsChanging(System.Nullable<int> value);
    partial void OnNumberOfInstallMentsChanged();
    partial void OnStoreIdChanging(System.Nullable<int> value);
    partial void OnStoreIdChanged();
    partial void OnInvoiceNetValueChanging(System.Nullable<decimal> value);
    partial void OnInvoiceNetValueChanged();
    partial void OnInvoiceNetValueAfterDiscountChanging(System.Nullable<decimal> value);
    partial void OnInvoiceNetValueAfterDiscountChanged();
    partial void OnInvoiceDiscountChanging(System.Nullable<decimal> value);
    partial void OnInvoiceDiscountChanged();
    partial void OnSubmittedValueChanging(System.Nullable<decimal> value);
    partial void OnSubmittedValueChanged();
    partial void Ontregary_IDChanging(System.Nullable<int> value);
    partial void Ontregary_IDChanged();
    partial void OnEmployeeIdChanging(System.Nullable<int> value);
    partial void OnEmployeeIdChanged();
    partial void OnMainDiscountChanging(System.Nullable<decimal> value);
    partial void OnMainDiscountChanged();
    partial void OnSeasoneIdChanging(System.Nullable<int> value);
    partial void OnSeasoneIdChanged();
    partial void OnDocTypeIdChanging(System.Nullable<int> value);
    partial void OnDocTypeIdChanged();
    partial void OnStudentIdChanging(System.Nullable<int> value);
    partial void OnStudentIdChanged();
    partial void OnClassesFlagIdChanging(System.Nullable<int> value);
    partial void OnClassesFlagIdChanged();
    partial void OnTeatacherIdChanging(System.Nullable<int> value);
    partial void OnTeatacherIdChanged();
    partial void OnLastFinalTotalDiscountChanging(System.Nullable<decimal> value);
    partial void OnLastFinalTotalDiscountChanged();
    partial void OnFinalInvoiceWinValueChanging(System.Nullable<decimal> value);
    partial void OnFinalInvoiceWinValueChanged();
    partial void OnInvoiceWinValueChanging(System.Nullable<decimal> value);
    partial void OnInvoiceWinValueChanged();
    partial void OnInvoiceNetValue2Changing(System.Nullable<decimal> value);
    partial void OnInvoiceNetValue2Changed();
    #endregion
		
		public InvoiceMaster()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int InvoiceId
		{
			get
			{
				return this._InvoiceId;
			}
			set
			{
				if ((this._InvoiceId != value))
				{
					this.OnInvoiceIdChanging(value);
					this.SendPropertyChanging();
					this._InvoiceId = value;
					this.SendPropertyChanged("InvoiceId");
					this.OnInvoiceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this.OnInvoiceDateChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDate = value;
					this.SendPropertyChanged("InvoiceDate");
					this.OnInvoiceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tetchrId", DbType="Int NOT NULL")]
		public int tetchrId
		{
			get
			{
				return this._tetchrId;
			}
			set
			{
				if ((this._tetchrId != value))
				{
					this.OntetchrIdChanging(value);
					this.SendPropertyChanging();
					this._tetchrId = value;
					this.SendPropertyChanged("tetchrId");
					this.OntetchrIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfInstallMents", DbType="Int")]
		public System.Nullable<int> NumberOfInstallMents
		{
			get
			{
				return this._NumberOfInstallMents;
			}
			set
			{
				if ((this._NumberOfInstallMents != value))
				{
					this.OnNumberOfInstallMentsChanging(value);
					this.SendPropertyChanging();
					this._NumberOfInstallMents = value;
					this.SendPropertyChanged("NumberOfInstallMents");
					this.OnNumberOfInstallMentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreId", DbType="Int")]
		public System.Nullable<int> StoreId
		{
			get
			{
				return this._StoreId;
			}
			set
			{
				if ((this._StoreId != value))
				{
					this.OnStoreIdChanging(value);
					this.SendPropertyChanging();
					this._StoreId = value;
					this.SendPropertyChanged("StoreId");
					this.OnStoreIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNetValue", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> InvoiceNetValue
		{
			get
			{
				return this._InvoiceNetValue;
			}
			set
			{
				if ((this._InvoiceNetValue != value))
				{
					this.OnInvoiceNetValueChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNetValue = value;
					this.SendPropertyChanged("InvoiceNetValue");
					this.OnInvoiceNetValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNetValueAfterDiscount", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> InvoiceNetValueAfterDiscount
		{
			get
			{
				return this._InvoiceNetValueAfterDiscount;
			}
			set
			{
				if ((this._InvoiceNetValueAfterDiscount != value))
				{
					this.OnInvoiceNetValueAfterDiscountChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNetValueAfterDiscount = value;
					this.SendPropertyChanged("InvoiceNetValueAfterDiscount");
					this.OnInvoiceNetValueAfterDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDiscount", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> InvoiceDiscount
		{
			get
			{
				return this._InvoiceDiscount;
			}
			set
			{
				if ((this._InvoiceDiscount != value))
				{
					this.OnInvoiceDiscountChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDiscount = value;
					this.SendPropertyChanged("InvoiceDiscount");
					this.OnInvoiceDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmittedValue", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> SubmittedValue
		{
			get
			{
				return this._SubmittedValue;
			}
			set
			{
				if ((this._SubmittedValue != value))
				{
					this.OnSubmittedValueChanging(value);
					this.SendPropertyChanging();
					this._SubmittedValue = value;
					this.SendPropertyChanged("SubmittedValue");
					this.OnSubmittedValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tregary_ID", DbType="Int")]
		public System.Nullable<int> tregary_ID
		{
			get
			{
				return this._tregary_ID;
			}
			set
			{
				if ((this._tregary_ID != value))
				{
					this.Ontregary_IDChanging(value);
					this.SendPropertyChanging();
					this._tregary_ID = value;
					this.SendPropertyChanged("tregary_ID");
					this.Ontregary_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int")]
		public System.Nullable<int> EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainDiscount", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> MainDiscount
		{
			get
			{
				return this._MainDiscount;
			}
			set
			{
				if ((this._MainDiscount != value))
				{
					this.OnMainDiscountChanging(value);
					this.SendPropertyChanging();
					this._MainDiscount = value;
					this.SendPropertyChanged("MainDiscount");
					this.OnMainDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeasoneId", DbType="Int")]
		public System.Nullable<int> SeasoneId
		{
			get
			{
				return this._SeasoneId;
			}
			set
			{
				if ((this._SeasoneId != value))
				{
					this.OnSeasoneIdChanging(value);
					this.SendPropertyChanging();
					this._SeasoneId = value;
					this.SendPropertyChanged("SeasoneId");
					this.OnSeasoneIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocTypeId", DbType="Int")]
		public System.Nullable<int> DocTypeId
		{
			get
			{
				return this._DocTypeId;
			}
			set
			{
				if ((this._DocTypeId != value))
				{
					this.OnDocTypeIdChanging(value);
					this.SendPropertyChanging();
					this._DocTypeId = value;
					this.SendPropertyChanged("DocTypeId");
					this.OnDocTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", DbType="Int")]
		public System.Nullable<int> StudentId
		{
			get
			{
				return this._StudentId;
			}
			set
			{
				if ((this._StudentId != value))
				{
					this.OnStudentIdChanging(value);
					this.SendPropertyChanging();
					this._StudentId = value;
					this.SendPropertyChanged("StudentId");
					this.OnStudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassesFlagId", DbType="Int")]
		public System.Nullable<int> ClassesFlagId
		{
			get
			{
				return this._ClassesFlagId;
			}
			set
			{
				if ((this._ClassesFlagId != value))
				{
					this.OnClassesFlagIdChanging(value);
					this.SendPropertyChanging();
					this._ClassesFlagId = value;
					this.SendPropertyChanged("ClassesFlagId");
					this.OnClassesFlagIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeatacherId", DbType="Int")]
		public System.Nullable<int> TeatacherId
		{
			get
			{
				return this._TeatacherId;
			}
			set
			{
				if ((this._TeatacherId != value))
				{
					this.OnTeatacherIdChanging(value);
					this.SendPropertyChanging();
					this._TeatacherId = value;
					this.SendPropertyChanged("TeatacherId");
					this.OnTeatacherIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastFinalTotalDiscount", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> LastFinalTotalDiscount
		{
			get
			{
				return this._LastFinalTotalDiscount;
			}
			set
			{
				if ((this._LastFinalTotalDiscount != value))
				{
					this.OnLastFinalTotalDiscountChanging(value);
					this.SendPropertyChanging();
					this._LastFinalTotalDiscount = value;
					this.SendPropertyChanged("LastFinalTotalDiscount");
					this.OnLastFinalTotalDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalInvoiceWinValue", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> FinalInvoiceWinValue
		{
			get
			{
				return this._FinalInvoiceWinValue;
			}
			set
			{
				if ((this._FinalInvoiceWinValue != value))
				{
					this.OnFinalInvoiceWinValueChanging(value);
					this.SendPropertyChanging();
					this._FinalInvoiceWinValue = value;
					this.SendPropertyChanged("FinalInvoiceWinValue");
					this.OnFinalInvoiceWinValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceWinValue", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> InvoiceWinValue
		{
			get
			{
				return this._InvoiceWinValue;
			}
			set
			{
				if ((this._InvoiceWinValue != value))
				{
					this.OnInvoiceWinValueChanging(value);
					this.SendPropertyChanging();
					this._InvoiceWinValue = value;
					this.SendPropertyChanged("InvoiceWinValue");
					this.OnInvoiceWinValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNetValue2", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> InvoiceNetValue2
		{
			get
			{
				return this._InvoiceNetValue2;
			}
			set
			{
				if ((this._InvoiceNetValue2 != value))
				{
					this.OnInvoiceNetValue2Changing(value);
					this.SendPropertyChanging();
					this._InvoiceNetValue2 = value;
					this.SendPropertyChanged("InvoiceNetValue2");
					this.OnInvoiceNetValue2Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceMasterDetail")]
	public partial class InvoiceMasterDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InvoiceDetailId;
		
		private System.Nullable<int> _InvoiceId;
		
		private System.Nullable<decimal> _ItemPrice;
		
		private System.Nullable<int> _ItemId;
		
		private System.Nullable<decimal> _Quantity;
		
		private System.Nullable<decimal> _Total;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoiceDetailIdChanging(int value);
    partial void OnInvoiceDetailIdChanged();
    partial void OnInvoiceIdChanging(System.Nullable<int> value);
    partial void OnInvoiceIdChanged();
    partial void OnItemPriceChanging(System.Nullable<decimal> value);
    partial void OnItemPriceChanged();
    partial void OnItemIdChanging(System.Nullable<int> value);
    partial void OnItemIdChanged();
    partial void OnQuantityChanging(System.Nullable<decimal> value);
    partial void OnQuantityChanged();
    partial void OnTotalChanging(System.Nullable<decimal> value);
    partial void OnTotalChanged();
    #endregion
		
		public InvoiceMasterDetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDetailId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int InvoiceDetailId
		{
			get
			{
				return this._InvoiceDetailId;
			}
			set
			{
				if ((this._InvoiceDetailId != value))
				{
					this.OnInvoiceDetailIdChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDetailId = value;
					this.SendPropertyChanged("InvoiceDetailId");
					this.OnInvoiceDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceId", DbType="Int")]
		public System.Nullable<int> InvoiceId
		{
			get
			{
				return this._InvoiceId;
			}
			set
			{
				if ((this._InvoiceId != value))
				{
					this.OnInvoiceIdChanging(value);
					this.SendPropertyChanging();
					this._InvoiceId = value;
					this.SendPropertyChanged("InvoiceId");
					this.OnInvoiceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemPrice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ItemPrice
		{
			get
			{
				return this._ItemPrice;
			}
			set
			{
				if ((this._ItemPrice != value))
				{
					this.OnItemPriceChanging(value);
					this.SendPropertyChanging();
					this._ItemPrice = value;
					this.SendPropertyChanged("ItemPrice");
					this.OnItemPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="Int")]
		public System.Nullable<int> ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class InsertIntoClaccesResult
	{
		
		private System.Nullable<decimal> _Column1;
		
		public InsertIntoClaccesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Decimal(38,0)")]
		public System.Nullable<decimal> Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class InsertStudentSubjectResult
	{
		
		private System.Nullable<decimal> _Column1;
		
		public InsertStudentSubjectResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Decimal(38,0)")]
		public System.Nullable<decimal> Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class InsertInDetailResult
	{
		
		private System.Nullable<decimal> _Column1;
		
		public InsertInDetailResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Decimal(38,0)")]
		public System.Nullable<decimal> Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
